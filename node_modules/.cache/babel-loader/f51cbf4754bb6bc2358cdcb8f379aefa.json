{"ast":null,"code":"var _jsxFileName = \"/home/lourenco/Documents/Robot Nasa/robot-front/src/components/ShipAndGrid.jsx\";\nimport React from 'react';\nimport spaceship from '../images/spaceship.png';\nimport '../styles/shipAndGrid.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tile = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tile\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Tile;\n\nconst transformDirectionToDegree = direction => {\n  let rotationDegree = '';\n\n  switch (direction) {\n    case 'N':\n      return rotationDegree = '0deg';\n      break;\n\n    case 'E':\n      return rotationDegree = '90deg';\n      break;\n\n    case 'S':\n      return rotationDegree = '180deg';\n      break;\n\n    case 'W':\n      return rotationDegree = '-90deg';\n      break;\n\n    default:\n      return rotationDegree;\n  }\n};\n\nconst Board = () => {\n  const boardSize = [0, 1, 2, 3, 4];\n  const reverseBoardSize = [4, 3, 2, 1, 0];\n  const robotPos = [2, 1, 'W'];\n  const transform = transformDirectionToDegree(robotPos[2]);\n  const robotDir = {\n    transform: `rotate(${transform})`\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: reverseBoardSize.map(row => {\n      return boardSize.map(column => robotPos[0] === column && robotPos[1] === row ? /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"robotImg\",\n        src: spaceship,\n        style: robotDir\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tile\",\n        children: [\"robot \", column, \" \", row]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this));\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Board;\nexport default Board;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Tile\");\n$RefreshReg$(_c2, \"Board\");","map":{"version":3,"sources":["/home/lourenco/Documents/Robot Nasa/robot-front/src/components/ShipAndGrid.jsx"],"names":["React","spaceship","Tile","transformDirectionToDegree","direction","rotationDegree","Board","boardSize","reverseBoardSize","robotPos","transform","robotDir","map","row","column"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAO,2BAAP;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,sBAAO;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;KAAMA,I;;AAIN,MAAMC,0BAA0B,GAAIC,SAAD,IAAe;AAChD,MAAIC,cAAc,GAAG,EAArB;;AACA,UAAQD,SAAR;AACE,SAAK,GAAL;AACE,aAAOC,cAAc,GAAG,MAAxB;AACA;;AACF,SAAK,GAAL;AACE,aAAOA,cAAc,GAAG,OAAxB;AACA;;AACF,SAAK,GAAL;AACE,aAAOA,cAAc,GAAG,QAAxB;AACA;;AACF,SAAK,GAAL;AACE,aAAOA,cAAc,GAAI,QAAzB;AACF;;AACA;AAAS,aAAOA,cAAP;AAbX;AAeD,CAjBD;;AAmBA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAMC,SAAS,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAlB;AACA,QAAMC,gBAAgB,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAzB;AACA,QAAMC,QAAQ,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,GAAP,CAAjB;AACA,QAAMC,SAAS,GAAGP,0BAA0B,CAACM,QAAQ,CAAC,CAAD,CAAT,CAA5C;AACA,QAAME,QAAQ,GAAG;AAACD,IAAAA,SAAS,EAAG,UAASA,SAAU;AAAhC,GAAjB;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,cACGF,gBAAgB,CAACI,GAAjB,CAAsBC,GAAD,IAAS;AAC7B,aAAON,SAAS,CAACK,GAAV,CAAeE,MAAD,IACnBL,QAAQ,CAAC,CAAD,CAAR,KAAgBK,MAAhB,IAA0BL,QAAQ,CAAC,CAAD,CAAR,KAAgBI,GAA1C,gBACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAA0B,QAAA,GAAG,EAAEZ,SAA/B;AAA0C,QAAA,KAAK,EAAEU;AAAjD;AAAA;AAAA;AAAA;AAAA,cADF,gBAGE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,6BACSG,MADT,OACkBD,GADlB;AAAA;AAAA;AAAA;AAAA;AAAA,cAJG,CAAP;AASD,KAVA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CArBD;;MAAMP,K;AAuBN,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport spaceship from '../images/spaceship.png';\nimport '../styles/shipAndGrid.css';\n\nconst Tile = () => {\n  return <div className=\"tile\"></div>;\n};\n\nconst transformDirectionToDegree = (direction) => {\n  let rotationDegree = ''\n  switch (direction) {\n    case 'N':\n      return rotationDegree = '0deg'\n      break;\n    case 'E':\n      return rotationDegree = '90deg'\n      break;\n    case 'S':\n      return rotationDegree = '180deg'\n      break;\n    case 'W':\n      return rotationDegree =  '-90deg'\n    break;\n    default: return rotationDegree\n  }\n}\n\nconst Board = () => {\n  const boardSize = [0, 1, 2, 3, 4];\n  const reverseBoardSize = [4, 3, 2, 1, 0];\n  const robotPos = [2, 1, 'W'];\n  const transform = transformDirectionToDegree(robotPos[2])\n  const robotDir = {transform: `rotate(${transform})`}\n  return (\n    <div className=\"board\">\n      {reverseBoardSize.map((row) => {\n        return boardSize.map((column) =>\n          robotPos[0] === column && robotPos[1] === row ? (\n            <img className=\"robotImg\" src={spaceship} style={robotDir} />\n          ) : (\n            <div className=\"tile\">\n              robot {column} {row}\n            </div>\n          ),\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}