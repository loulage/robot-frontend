{"ast":null,"code":"var _jsxFileName = \"/home/lourenco/Documents/Robot Nasa/robot-front/src/components/CommandForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport '../styles/commandForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommandForm = () => {\n  _s();\n\n  const [inputValue, setInputValue] = useState('');\n  const [robotId, setRobotId] = useState();\n  const [errorMessage, setErrorMessage] = useState('');\n  useEffect(() => {\n    getRobotId();\n  }, []);\n\n  const getRobotId = async () => {\n    console.log('oi');\n    const URL = 'http://localhost:3333/robot';\n    const response = await fetch(URL);\n    const data = await response.json();\n    setRobotId(data[0].id);\n    console.log('fetchedId', data[0].id);\n  };\n\n  const onSubmit = async () => {\n    console.log('onsub');\n    const command = inputValue.toUpperCase();\n    const id = robotId;\n    const rawResponse = await fetch('http://localhost:3333/command', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      },\n      body: JSON.stringify({\n        userInput: command,\n        robotId: id\n      })\n    });\n    console.log('content here', rawResponse);\n    const content = await rawResponse.json(); //setErrorMessage(content.message);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"mb-3 container\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"group\",\n      controlId: \"command\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        className: \"label\",\n        children: \"Write a Command!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        size: \"sm\",\n        type: \"text\",\n        style: {\n          textTransform: 'uppercase'\n        },\n        placeholder: \"Only M R L allowed!\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"submitButton\",\n      type: \"submit\",\n      onClick: onSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CommandForm, \"VQPHQXR8USzIgP/I3Z8r1waYm4k=\");\n\n_c = CommandForm;\nexport default CommandForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommandForm\");","map":{"version":3,"sources":["/home/lourenco/Documents/Robot Nasa/robot-front/src/components/CommandForm.jsx"],"names":["React","useEffect","useState","Button","Form","CommandForm","inputValue","setInputValue","robotId","setRobotId","errorMessage","setErrorMessage","getRobotId","console","log","URL","response","fetch","data","json","id","onSubmit","command","toUpperCase","rawResponse","method","headers","body","JSON","stringify","userInput","content","textTransform","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport '../styles/commandForm.css'\n\nconst CommandForm = () => {\n  const [inputValue, setInputValue] = useState('');\n  const [robotId, setRobotId] = useState();\n  const [errorMessage, setErrorMessage] = useState('');\n\n  useEffect(() => {\n    getRobotId()\n  }, [])\n\n  const getRobotId = async () => {\n    console.log('oi')\n    const URL = 'http://localhost:3333/robot'\n    const response = await fetch(URL);\n    const data = await response.json()\n    setRobotId(data[0].id)\n    console.log('fetchedId', (data[0].id))\n  }\n\n  const onSubmit = async () => {\n    console.log('onsub')\n    const command = inputValue.toUpperCase()\n    const id = robotId;\n    const rawResponse = await fetch('http://localhost:3333/command', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      },\n      body: JSON.stringify({userInput: command, robotId: id}),\n    })\n\n    console.log('content here',rawResponse)\n    const content = await rawResponse.json()\n    //setErrorMessage(content.message);\n  };\n\n  return (\n    <Form className=\"mb-3 container\">\n      <Form.Group className='group' controlId=\"command\">\n        <Form.Label\n        className=\"label\"\n        >Write a Command!</Form.Label>\n        <Form.Control\n          size=\"sm\"\n          type=\"text\"\n          style={ {textTransform: 'uppercase'}}\n          placeholder=\"Only M R L allowed!\"\n          value={inputValue}\n          onChange={(e) => setInputValue(e.target.value)}\n        />\n      </Form.Group>\n      <Button\n      className=\"submitButton\"\n      type=\"submit\"\n      onClick={onSubmit}>Submit</Button>\n    </Form>\n  );\n};\n\nexport default CommandForm;\n"]},"metadata":{},"sourceType":"module"}