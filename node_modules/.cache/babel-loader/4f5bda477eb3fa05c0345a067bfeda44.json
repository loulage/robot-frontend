{"ast":null,"code":"var _jsxFileName = \"/home/lourenco/Documents/Robot Nasa/robot-front/src/components/CommandForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommandForm = () => {\n  _s();\n\n  const [inputValue, setInputValue] = useState('');\n  const [robotId, setRobotId] = useState();\n  console.log('inputValue', inputValue);\n  useEffect(() => {\n    getRobotId();\n  }, []);\n\n  const getRobotId = async () => {\n    const URL = 'http://localhost:3333/robot';\n    const response = await fetch(URL);\n    const data = await response.json();\n    setRobotId(data[0].id);\n    console.log('fetchedId', data[0].id);\n  };\n\n  const onSubmit = async () => {\n    const command = inputValue.toUpperCase();\n    const id = robotId;\n    const requestBody = {\n      userInput: command,\n      robotId: id\n    };\n    console.log('body', requestBody);\n    console.log('data', command);\n    fetch('http://localhost:3333/command', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(command.toUpperCase())\n    }).then(response => response.json()).then(data => {\n      console.log('Success:', data);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"command\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Write a Command!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        style: {\n          textTransform: 'uppercase'\n        },\n        placeholder: \"Only M R L allowed!\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      onClick: onSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CommandForm, \"ZcGgkQKeil0XZP2nXnwqFOQrLCI=\");\n\n_c = CommandForm;\nexport default CommandForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommandForm\");","map":{"version":3,"sources":["/home/lourenco/Documents/Robot Nasa/robot-front/src/components/CommandForm.jsx"],"names":["React","useEffect","useState","Button","Form","CommandForm","inputValue","setInputValue","robotId","setRobotId","console","log","getRobotId","URL","response","fetch","data","json","id","onSubmit","command","toUpperCase","requestBody","userInput","method","headers","body","JSON","stringify","then","catch","error","textTransform","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\n\nconst CommandForm = () => {\n  const [inputValue, setInputValue] = useState('');\n  const [robotId, setRobotId] = useState()\n  console.log('inputValue', inputValue);\n\n  useEffect(() => {\n    getRobotId()\n  }, [])\n\n  const getRobotId = async () => {\n    const URL = 'http://localhost:3333/robot'\n    const response = await fetch(URL);\n    const data = await response.json()\n    setRobotId(data[0].id)\n    console.log('fetchedId', (data[0].id))\n  }\n\n  const onSubmit = async () => {\n    const command = inputValue.toUpperCase()\n    const id = robotId;\n    const requestBody = {userInput: command, robotId: id}\n    console.log('body', requestBody)\n    console.log('data', command)\n    fetch('http://localhost:3333/command', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(command.toUpperCase(), ),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log('Success:', data);\n      })\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n  };\n\n  return (\n    <Form>\n      <Form.Group className=\"mb-3\" controlId=\"command\">\n        <Form.Label>Write a Command!</Form.Label>\n        <Form.Control\n          type=\"text\"\n          style={ {textTransform: 'uppercase'}}\n          placeholder=\"Only M R L allowed!\"\n          value={inputValue}\n          onChange={(e) => setInputValue(e.target.value)}\n        />\n      </Form.Group>\n      <Button \n      type=\"submit\"\n      onClick={onSubmit}>Submit</Button>\n    </Form>\n  );\n};\n\nexport default CommandForm;\n"]},"metadata":{},"sourceType":"module"}