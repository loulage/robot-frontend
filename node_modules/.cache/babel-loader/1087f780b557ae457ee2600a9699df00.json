{"ast":null,"code":"var _jsxFileName = \"/home/lourenco/Documents/Robot Nasa/robot-front/src/components/ShipAndGrid.jsx\";\nimport React from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport CommandForm from './CommandForm';\nimport CommandList from './CommandList';\nimport '../styles/shipAndGrid.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Board = () => {\n  const size = [1, 2, 3, 4, 5];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: size.map((row, index) => {\n      return size.map((colum, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"robot \", index, \" \", i]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 41\n      }, this));\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/home/lourenco/Documents/Robot Nasa/robot-front/src/components/ShipAndGrid.jsx"],"names":["React","Button","Form","CommandForm","CommandList","Board","size","map","row","index","colum","i"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,iBAA7B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,2BAAP;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAMC,IAAI,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,CAAb;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,cAGIA,IAAI,CAACC,GAAL,CAAS,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACvB,aAAOH,IAAI,CAACC,GAAL,CAAS,CAACG,KAAD,EAAQC,CAAR,kBAAc;AAAA,6BAAYF,KAAZ,OAAoBE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAvB,CAAP;AACD,KAFD;AAHJ;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAZD;;KAAMN,K;AAcN,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport CommandForm from './CommandForm';\nimport CommandList from './CommandList';\nimport '../styles/shipAndGrid.css'\n\nconst Board = () => {\n  const size = [1,2,3,4,5]\n  return (\n    <div className='board'>\n\n      {\n        size.map((row, index) => {\n          return size.map((colum, i) => <div>robot {index} {i}</div>)\n        } )\n      }\n    </div>\n  )\n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}