{"ast":null,"code":"var _jsxFileName = \"/home/lourenco/Documents/Robot Nasa/robot-front/src/components/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport CommandForm from './CommandForm';\nimport CommandList from './CommandList';\nimport ResetButton from './ResetButton';\nimport Board from './ShipAndGrid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [haveRobotCreated, setHaveRobotCreated] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    loadRobot();\n  }, []);\n\n  const loadRobot = async () => {\n    try {\n      await setIsLoading(true);\n      const getRobotURL = 'http://localhost:3333/robot';\n      const response = await fetch(getRobotURL);\n      const data = await response.json();\n      console.log('aqui msm', data)(data.length > 0) ? await setHaveRobotCreated(true) : await setHaveRobotCreated(false);\n      console.log('aqui', haveRobotCreated);\n      await setIsLoading(false);\n    } catch (err) {\n      await setHaveRobotCreated(false);\n      console.log(haveRobotCreated);\n    }\n  };\n\n  const createRobot = async () => {\n    console.log('inicio');\n    const robot = await fetch('http://localhost:3333/robot', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: ''\n    });\n    const content = await robot.json();\n    await setHaveRobotCreated(content);\n    console.log('dentro do create body final', haveRobotCreated);\n  };\n\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Explore\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Mars\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommandForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommandList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResetButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"4EqYIOCtwSuroqaCEU06/fFUNug=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/lourenco/Documents/Robot Nasa/robot-front/src/components/Home.jsx"],"names":["React","useState","useEffect","CommandForm","CommandList","ResetButton","Board","Home","haveRobotCreated","setHaveRobotCreated","isLoading","setIsLoading","loadRobot","getRobotURL","response","fetch","data","json","console","log","length","err","createRobot","robot","method","headers","body","content"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,eAAlB;;;AAGA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CR,QAAQ,EAAxD;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,SAAS,GAAG,YAAY;AAC9B,QAAI;AACF,YAAMD,YAAY,CAAC,IAAD,CAAlB;AACA,YAAME,WAAW,GAAG,6BAApB;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,WAAD,CAA5B;AACA,YAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,IAAxB,EACEA,IAAI,CAACI,MAAL,GAAc,CADhB,IACqB,MAAMX,mBAAmB,CAAC,IAAD,CAD9C,GACuD,MAAMA,mBAAmB,CAAC,KAAD,CADhF;AAEAS,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBX,gBAApB;AACA,YAAMG,YAAY,CAAC,KAAD,CAAlB;AACD,KATD,CASE,OAAOU,GAAP,EAAY;AACZ,YAAMZ,mBAAmB,CAAC,KAAD,CAAzB;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYX,gBAAZ;AACD;AACF,GAdC;;AAgBF,QAAMc,WAAW,GAAG,YAAY;AAC9BJ,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACE,UAAMI,KAAK,GAAG,MAAMR,KAAK,CAAC,6BAAD,EAAgC;AACvDS,MAAAA,MAAM,EAAE,MAD+C;AAEvDC,MAAAA,OAAO,EAAE;AACP,kBAAU,kBADH;AAEP,wBAAgB;AAFT,OAF8C;AAMvDC,MAAAA,IAAI,EAAE;AANiD,KAAhC,CAAzB;AAQA,UAAMC,OAAO,GAAG,MAAMJ,KAAK,CAACN,IAAN,EAAtB;AACA,UAAMR,mBAAmB,CAACkB,OAAD,CAAzB;AAEAT,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CX,gBAA3C;AACH,GAdD;;AAeE,MAAIE,SAAJ,EAAe,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACf,sBACE;AAAA,4BACE;AAAA,8BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YALF,eAOE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YARF,eASE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CArDD;;GAAMH,I;;KAAAA,I;AAuDN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect} from 'react';\nimport CommandForm from './CommandForm';\nimport CommandList from './CommandList';\nimport ResetButton from './ResetButton';\nimport Board from './ShipAndGrid';\n\n\nconst Home = () => {\n  const [haveRobotCreated, setHaveRobotCreated] = useState();\n  const [isLoading, setIsLoading] = useState(false)\n\n  useEffect(() => {\n    loadRobot();\n  }, [])\n\n  const loadRobot = async () => {\n  try {\n    await setIsLoading(true)\n    const getRobotURL = 'http://localhost:3333/robot'\n    const response = await fetch(getRobotURL);\n    const data = await response.json()\n    console.log('aqui msm', data)\n     (data.length > 0) ? await setHaveRobotCreated(true) : await setHaveRobotCreated(false)\n    console.log('aqui', haveRobotCreated)\n    await setIsLoading(false)\n  } catch (err) {\n    await setHaveRobotCreated(false)\n    console.log(haveRobotCreated)\n  }\n}\n\nconst createRobot = async () => {\n  console.log('inicio')\n    const robot = await fetch('http://localhost:3333/robot', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: '',\n    })\n    const content = await robot.json()\n    await setHaveRobotCreated(content)\n\n    console.log('dentro do create body final', haveRobotCreated)\n}\n  if (isLoading) return <div>loading</div>\n  return (\n    <div>\n      <header>\n       <h1>Explore</h1>\n       <h1>Mars</h1>\n      </header>\n      <CommandForm />\n\n      <CommandList />\n      <Board />\n      <ResetButton />\n    </div>\n  );\n};\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}