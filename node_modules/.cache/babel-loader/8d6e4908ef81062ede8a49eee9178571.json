{"ast":null,"code":"var _jsxFileName = \"/home/lourenco/Documents/Robot Nasa/robot-front/src/components/ShipAndGrid.jsx\";\nimport React from 'react';\nimport spaceship from '../images/spaceship.png';\nimport '../styles/shipAndGrid.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tile = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tile\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Tile;\n\nconst Board = () => {\n  const sizeBoard = [...Array(5).keys()];\n  const range = 5;\n  const robotPos = [2, 1];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n  /* sizeBoard.map((row, x) => {\n    return sizeBoard.map((colum, y) =>  (robotPos[0] === x && robotPos[1] === y) ? <img className='robotImg' src={spaceship}/>: <div>robot {x} {y}</div>)\n  } ) */\n};\n\n_c2 = Board;\nexport default Board;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Tile\");\n$RefreshReg$(_c2, \"Board\");","map":{"version":3,"sources":["/home/lourenco/Documents/Robot Nasa/robot-front/src/components/ShipAndGrid.jsx"],"names":["React","spaceship","Tile","Board","sizeBoard","Array","keys","range","robotPos"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAO,2BAAP;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,sBACE;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAJD;;KAAMA,I;;AAMN,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAMC,SAAS,GAAG,CAAC,GAAGC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,EAAJ,CAAlB;AACA,QAAMC,KAAK,GAAG,CAAd;AACA,QAAMC,QAAQ,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAjB;AACA,sBACE;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,UADF;AAYE;AACJ;AACA;AACG,CAnBH;;MAAML,K;AAoBN,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport spaceship from '../images/spaceship.png'\nimport '../styles/shipAndGrid.css'\n\nconst Tile = () => {\n  return (\n    <div className='tile'></div>\n  )\n};\n\nconst Board = () => {\n  const sizeBoard = [...Array(5).keys()];\n  const range = 5;\n  const robotPos = [2, 1]\n  return (\n    <div className='board'>\n\n      { \n      \n      //for (let x = 0; x < range; x++) \n      //{\n          //retur\n      //}\n    }\n      </div>\n  )\n    /* sizeBoard.map((row, x) => {\n      return sizeBoard.map((colum, y) =>  (robotPos[0] === x && robotPos[1] === y) ? <img className='robotImg' src={spaceship}/>: <div>robot {x} {y}</div>)\n    } ) */\n  }\nexport default Board;"]},"metadata":{},"sourceType":"module"}