{"ast":null,"code":"var _jsxFileName = \"/home/lourenco/Documents/Robot Nasa/robot-front/src/components/ShipAndGrid.jsx\";\nimport React from 'react';\nimport spaceship from '../images/spaceship.png';\nimport '../styles/shipAndGrid.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tile = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tile\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Tile;\n\nconst Board = () => {\n  const boardSize = [0, 1, 2, 3, 4];\n  const reverseBoardSize = [4, 3, 2, 1, 0];\n  const robotPos = [2, 1];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: reverseBoardSize.map(row => {\n      return boardSize.map(column => robotPos[0] === column && robotPos[1] === row ? /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"robotImg\",\n        src: spaceship\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tile\",\n        children: [\"robot \", column, \" \", row]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this));\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Board;\nexport default Board;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Tile\");\n$RefreshReg$(_c2, \"Board\");","map":{"version":3,"sources":["/home/lourenco/Documents/Robot Nasa/robot-front/src/components/ShipAndGrid.jsx"],"names":["React","spaceship","Tile","Board","boardSize","reverseBoardSize","robotPos","map","row","column"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAO,2BAAP;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,sBAAO;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;KAAMA,I;;AAIN,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAMC,SAAS,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAlB;AACA,QAAMC,gBAAgB,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAzB;AACA,QAAMC,QAAQ,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAjB;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,cACGD,gBAAgB,CAACE,GAAjB,CAAsBC,GAAD,IAAS;AAC7B,aAAOJ,SAAS,CAACG,GAAV,CAAeE,MAAD,IACnBH,QAAQ,CAAC,CAAD,CAAR,KAAgBG,MAAhB,IAA0BH,QAAQ,CAAC,CAAD,CAAR,KAAgBE,GAA1C,gBACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAA0B,QAAA,GAAG,EAAEP;AAA/B;AAAA;AAAA;AAAA;AAAA,cADF,gBAGE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,6BACSQ,MADT,OACkBD,GADlB;AAAA;AAAA;AAAA;AAAA;AAAA,cAJG,CAAP;AASD,KAVA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAnBD;;MAAML,K;AAqBN,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport spaceship from '../images/spaceship.png';\nimport '../styles/shipAndGrid.css';\n\nconst Tile = () => {\n  return <div className=\"tile\"></div>;\n};\n\nconst Board = () => {\n  const boardSize = [0, 1, 2, 3, 4];\n  const reverseBoardSize = [4, 3, 2, 1, 0];\n  const robotPos = [2, 1];\n  return (\n    <div className=\"board\">\n      {reverseBoardSize.map((row) => {\n        return boardSize.map((column) =>\n          robotPos[0] === column && robotPos[1] === row ? (\n            <img className=\"robotImg\" src={spaceship} />\n          ) : (\n            <div className=\"tile\">\n              robot {column} {row}\n            </div>\n          ),\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}